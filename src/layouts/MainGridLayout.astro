---
import BackToTop from "@components/control/BackToTop.astro";
import Footer from "@components/Footer.astro";
import Navbar from "@components/Navbar.astro";
import SideBar from "@components/widget/SideBar.astro";
import SpineModel from "@components/widget/SpineModel.astro";
import Live2DWidget from "@components/widget/Live2DWidget.astro";
import type { MarkdownHeading } from "astro";
import { Icon } from "astro-icon/components";
import FullscreenWallpaper from "../components/misc/FullscreenWallpaper.astro";
import IconifyLoader from "../components/misc/IconifyLoader.astro";
import ImageWrapper from "../components/misc/ImageWrapper.astro";
import TypewriterText from "../components/TypewriterText.astro";
import TOC from "../components/widget/TOC.astro";
import FloatingTOC from "../components/widget/FloatingTOC.astro";
import { siteConfig, sidebarLayoutConfig, live2dModelConfig } from "../config";
import {
	BANNER_HEIGHT,
	BANNER_HEIGHT_EXTEND,
	MAIN_PANEL_OVERLAPS_BANNER_HEIGHT,
} from "../constants/constants";
import { widgetManager } from "../utils/widget-manager";
import Layout from "./Layout.astro";

interface Props {
	title?: string;
	banner?: string;
	description?: string;
	lang?: string;
	setOGTypeArticle?: boolean;
	postSlug?: string;
	headings?: MarkdownHeading[];
}

// 类型守卫函数
const isBannerSrcObject = (
	src:
		| string
		| string[]
		| { desktop?: string | string[]; mobile?: string | string[] },
): src is { desktop?: string | string[]; mobile?: string | string[] } => {
	return (
		typeof src === "object" &&
		src !== null &&
		!Array.isArray(src) &&
		("desktop" in src || "mobile" in src)
	);
};

// 获取背景图片的辅助函数
const getBackgroundImages = () => {
	const bgSrc = siteConfig.backgroundWallpaper.src;

	if (
		typeof bgSrc === "object" &&
		bgSrc !== null &&
		!Array.isArray(bgSrc) &&
		("desktop" in bgSrc || "mobile" in bgSrc)
	) {
		const srcObj = bgSrc as {
			desktop?: string | string[];
			mobile?: string | string[];
		};
		return {
			desktop: srcObj.desktop || srcObj.mobile || "",
			mobile: srcObj.mobile || srcObj.desktop || "",
		};
	}
	// 如果是字符串，同时用于桌面端和移动端
	return {
		desktop: bgSrc,
		mobile: bgSrc,
	};
};

const backgroundImages = getBackgroundImages();

const {
	title,
	banner,
	description,
	lang,
	setOGTypeArticle,
	postSlug,
	headings = [],
} = Astro.props;

// 检查背景壁纸模式和启用状态
const isBannerMode = siteConfig.backgroundWallpaper.mode === "banner";
const isOverlayMode = siteConfig.backgroundWallpaper.mode === "overlay";
const isBackgroundEnabled = siteConfig.backgroundWallpaper.enable;

// 检查是否启用波浪动画效果
const wavesConfig = siteConfig.backgroundWallpaper.banner?.waves?.enable;
const isWavesEnabled = isBannerMode && isBackgroundEnabled && wavesConfig;
// 处理分设备控制的波浪动画
const wavesEnabledOnDesktop = typeof wavesConfig === 'object' ? wavesConfig.desktop : wavesConfig;
const wavesEnabledOnMobile = typeof wavesConfig === 'object' ? wavesConfig.mobile : wavesConfig;

// 处理分设备控制的横幅信贷显示
const creditEnableConfig = siteConfig.backgroundWallpaper.banner?.credit?.enable;
const creditEnabledOnDesktop = typeof creditEnableConfig === 'object' ? creditEnableConfig.desktop : creditEnableConfig;
const creditEnabledOnMobile = typeof creditEnableConfig === 'object' ? creditEnableConfig.mobile : creditEnableConfig;

const hasBannerCredit = isBannerMode && isBackgroundEnabled && creditEnableConfig;

// 处理分设备控制的横幅信贷文本和链接
const creditTextConfig = siteConfig.backgroundWallpaper.banner?.credit?.text;
const creditTextDesktop = typeof creditTextConfig === 'object' ? creditTextConfig.desktop : creditTextConfig;
const creditTextMobile = typeof creditTextConfig === 'object' ? creditTextConfig.mobile : creditTextConfig;

const creditUrlConfig = siteConfig.backgroundWallpaper.banner?.credit?.url;
const creditUrlDesktop = typeof creditUrlConfig === 'object' ? creditUrlConfig.desktop : creditUrlConfig;
const creditUrlMobile = typeof creditUrlConfig === 'object' ? creditUrlConfig.mobile : creditUrlConfig;

const hasBannerLink = !!(creditUrlDesktop || creditUrlMobile);

// 检查是否为首页
const isHomePage = Astro.url.pathname === "/" || Astro.url.pathname === "";

// 主页横幅文本只在首页且全局开关为 true 时显示，不区分设备
const homeTextEnable = siteConfig.backgroundWallpaper.banner?.homeText?.enable;
const showHomeText = isBannerMode && !!homeTextEnable && isHomePage;
// 手机端非首页不显示banner的CSS类
const mobileNonHomeBannerClass = !isHomePage ? "mobile-hide-banner" : "";

// 计算主内容区域位置，考虑手机端非首页时banner被隐藏
const mainPanelTop = isBannerMode && isBackgroundEnabled
	? `calc(${BANNER_HEIGHT}vh - ${MAIN_PANEL_OVERLAPS_BANNER_HEIGHT}rem)`
	: "5.5rem";
const mobileNonHomeMainTop = !isHomePage ? "5.5rem" : mainPanelTop;

// 当banner模式被禁用时，主内容区域应该始终从顶栏下面开始
const finalMainPanelTop = isBannerMode && isBackgroundEnabled ? mainPanelTop : "5.5rem";

// 检查侧边栏是否启用，动态调整网格布局
// 全局启用状态
const globalSidebarEnabled = sidebarLayoutConfig.enable;
// 侧边栏位置配置
const sidebarPosition = sidebarLayoutConfig.position || "left";
// 响应式配置：不同设备上的侧边栏显示状态
const mobileShowSidebar =
	globalSidebarEnabled && widgetManager.shouldShowSidebar("mobile");
const tabletShowSidebar =
	globalSidebarEnabled && widgetManager.shouldShowSidebar("tablet");
const desktopShowSidebar =
	globalSidebarEnabled && widgetManager.shouldShowSidebar("desktop");

// 动态网格布局类名 - 根据侧边栏位置调整列宽
const gridCols = `
	${mobileShowSidebar ? "grid-cols-1" : "grid-cols-1"}
	${tabletShowSidebar ? (sidebarPosition === "right" ? "md:grid-cols-[1fr_17.5rem]" : "md:grid-cols-[17.5rem_1fr]") : "md:grid-cols-1"}
	${desktopShowSidebar ? (sidebarPosition === "right" ? "lg:grid-cols-[1fr_17.5rem]" : "lg:grid-cols-[17.5rem_1fr]") : "lg:grid-cols-1"}
`
	.trim()
	.replace(/\s+/g, " ");

// 侧边栏容器类名 - 根据位置调整grid-column
const sidebarClass = `
	mb-4 row-start-2 row-end-3 col-span-2 onload-animation
	${mobileShowSidebar ? "block" : "hidden"}
	${tabletShowSidebar ? `md:block md:row-start-1 md:row-end-2 md:max-w-[17.5rem] ${sidebarPosition === "right" ? "md:col-start-2 md:col-end-3" : "md:col-start-1 md:col-end-2"}` : "md:hidden"}
	${desktopShowSidebar ? `lg:block lg:row-start-1 lg:row-end-2 lg:max-w-[17.5rem] ${sidebarPosition === "right" ? "lg:col-start-2 lg:col-end-3" : "lg:col-start-1 lg:col-end-2"}` : "lg:hidden"}
`
	.trim()
	.replace(/\s+/g, " ");

// 主内容区域类名 - 根据侧边栏位置调整grid-column
const mainContentClass = `
	transition-swup-fade overflow-hidden w-full
	${mobileShowSidebar ? "col-span-2" : "col-span-1"}
	${tabletShowSidebar ? `${sidebarPosition === "right" ? "md:col-start-1 md:col-end-2" : "md:col-start-2 md:col-end-3"}` : "md:col-span-1"}
	${desktopShowSidebar ? `${sidebarPosition === "right" ? "lg:col-start-1 lg:col-end-2" : "lg:col-start-2 lg:col-end-3"}` : "lg:col-span-1"}
`
	.trim()
	.replace(/\s+/g, " ");

// 检查是否应该启用半透明效果
const shouldEnableTransparency = isOverlayMode && isBackgroundEnabled;

// 为组件添加半透明效果的CSS类
const transparentClass = shouldEnableTransparency
	? "wallpaper-transparent"
	: "";
---

<Layout title={title} banner={banner} description={description} lang={lang} setOGTypeArticle={setOGTypeArticle} postSlug={postSlug}>



<!-- 全屏透明覆盖壁纸 - 仅在全屏透明覆盖模式启用时显示 -->
{isOverlayMode && isBackgroundEnabled && (
	<FullscreenWallpaper config={{
		enable: isBackgroundEnabled,
		src: {
			desktop: typeof backgroundImages.desktop === 'string' ? backgroundImages.desktop : '',
			mobile: typeof backgroundImages.mobile === 'string' ? backgroundImages.mobile : ''
		},
		position: siteConfig.backgroundWallpaper.position,
		zIndex: siteConfig.backgroundWallpaper.overlay?.zIndex,
		opacity: siteConfig.backgroundWallpaper.overlay?.opacity,
		blur: siteConfig.backgroundWallpaper.overlay?.blur,
	}} />
)}

<!-- 全局图标加载器 -->
<IconifyLoader />

<!-- 为全屏壁纸模式添加body类 -->
{shouldEnableTransparency && (
	<script>
		document.body.classList.add('wallpaper-transparent');
	</script>
)}

<!-- Navbar -->
<slot slot="head" name="head"></slot>
<div id="top-row" class="z-50 pointer-events-none relative transition-all duration-700 max-w-[var(--page-width)] px-0 md:px-4 mx-auto" class:list={[""]}>
    <div id="navbar-wrapper" class="pointer-events-auto sticky top-0 transition-all">
        <Navbar></Navbar>
    </div>
</div>

<!-- Banner -->
{isBannerMode && isBackgroundEnabled && <div id="banner-wrapper" class={`absolute z-10 w-full transition duration-700 overflow-hidden ${mobileNonHomeBannerClass}`} style={`top: -${BANNER_HEIGHT_EXTEND}vh`}>
    <!-- 背景图片显示 -->
    <div class="relative h-full w-full">
        <!-- Mobile: use mobile-specific image -->
        <ImageWrapper 
            alt="Mobile background image of the blog" 
            class:list={["block lg:hidden object-cover h-full w-full transition duration-700 opacity-100"]}
            src={typeof backgroundImages.mobile === 'string' ? backgroundImages.mobile : (typeof backgroundImages.desktop === 'string' ? backgroundImages.desktop : '')} 
            position={siteConfig.backgroundWallpaper.position}
        />
        <!-- Desktop: use desktop-specific image -->
        <ImageWrapper 
            id="banner" 
            alt="Desktop background image of the blog" 
            class:list={["hidden lg:block object-cover h-full transition duration-700 opacity-100"]}
            src={typeof backgroundImages.desktop === 'string' ? backgroundImages.desktop : (typeof backgroundImages.mobile === 'string' ? backgroundImages.mobile : '')} 
            position={siteConfig.backgroundWallpaper.position}
        />
    </div>
    
    <!-- Home page text overlay -->
    {showHomeText && (
        <div class={`banner-text-overlay absolute inset-0 z-20 flex items-center justify-center ${!showHomeText ? 'hidden' : ''}`}>
            <div class="w-4/5 lg:w-3/4 text-center mb-0">
                <div class="flex flex-col">
                    {siteConfig.backgroundWallpaper.banner?.homeText?.title && (
                        <h1 class="banner-title text-6xl lg:text-8xl text-white drop-shadow-lg mb-2 lg:mb-4">
                            {siteConfig.backgroundWallpaper.banner.homeText.title}
                        </h1>
                    )}
                    {siteConfig.backgroundWallpaper.banner?.homeText?.subtitle && (
                        <h2 class="banner-subtitle text-xl lg:text-3xl text-white/90 drop-shadow-md">
                            {siteConfig.backgroundWallpaper.banner.homeText.typewriter?.enable ? (
                                <TypewriterText 
                                    text={siteConfig.backgroundWallpaper.banner.homeText.subtitle}
                                    speed={siteConfig.backgroundWallpaper.banner.homeText.typewriter.speed}
                                    deleteSpeed={siteConfig.backgroundWallpaper.banner.homeText.typewriter.deleteSpeed}
                                    pauseTime={siteConfig.backgroundWallpaper.banner.homeText.typewriter.pauseTime}
                                />
                            ) : (
                                Array.isArray(siteConfig.backgroundWallpaper.banner.homeText.subtitle) 
                                    ? siteConfig.backgroundWallpaper.banner.homeText.subtitle[0] 
                                    : siteConfig.backgroundWallpaper.banner.homeText.subtitle
                            )}
                        </h2>
                    )}
                </div>
            </div>
        </div>
    )}
    
    <!-- Water waves effect -->
    {(wavesEnabledOnDesktop || wavesEnabledOnMobile) && (
    <div class={`waves absolute -bottom-[1px] h-[10vh] max-h-[9.375rem] min-h-[3.125rem] w-full md:h-[15vh] 
        ${!wavesEnabledOnMobile ? 'hidden' : ''} ${!wavesEnabledOnDesktop ? 'md:hidden' : ''} ${wavesEnabledOnDesktop ? 'md:block' : ''}`} 
        id="header-waves" style="transform: translateZ(0); will-change: fill;">
        <svg
            class="waves"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            viewBox="0 20 150 32"
            preserveAspectRatio="none"
            shape-rendering="auto"
            style="transform: translateZ(0); backface-visibility: hidden;"
        >
            <defs>
                <path
                    id="gentle-wave"
                    d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v48h-352z"
                >
                </path>
            </defs>
            <g class="parallax" style="transform: translateZ(0);">
                <use
                    xlink:href="#gentle-wave"
                    x="48"
                    y="0"
                    class="opacity-25 fill-[var(--page-bg)]"
                    style="animation-delay: -2s; animation-duration: 7s; will-change: transform;"
                ></use>
                <use
                    xlink:href="#gentle-wave"
                    x="48"
                    y="3"
                    class="opacity-50 fill-[var(--page-bg)]"
                    style="animation-delay: -3s; animation-duration: 10s; will-change: transform;"
                ></use>
                <use
                    xlink:href="#gentle-wave"
                    x="48"
                    y="5"
                    class="opacity-75 fill-[var(--page-bg)]"
                    style="animation-delay: -4s; animation-duration: 13s; will-change: transform;"
                ></use>
                <use
                    xlink:href="#gentle-wave"
                    x="48"
                    y="7"
                    class="fill-[var(--page-bg)]"
                    style="animation-delay: -5s; animation-duration: 20s; will-change: transform;"
                ></use>
            </g>
        </svg>
    </div>
    )}
</div>}

<!-- Main content -->
<div class={`absolute w-full z-30 pointer-events-none ${mobileNonHomeBannerClass ? 'mobile-main-no-banner' : ''} ${!(isBannerMode && isBackgroundEnabled) ? 'no-banner-layout' : ''} ${transparentClass}`} style={`top: ${finalMainPanelTop}`}>
    <!-- The pointer-events-none here prevent blocking the click event of the TOC -->
    <div class="relative max-w-[var(--page-width)] mx-auto pointer-events-auto">
        <div id="main-grid" class={`transition duration-700 w-full left-0 right-0 grid ${gridCols} grid-rows-[auto_1fr_auto] lg:grid-rows-[auto] mx-auto gap-4 px-2 md:px-4 ${!mobileShowSidebar ? 'mobile-no-sidebar' : ''}`}
        >
            <!-- Background image credit - Desktop -->
            {hasBannerCredit && creditEnabledOnDesktop && <a 
                href={creditUrlDesktop || "#"} 
                id="banner-credit-desktop" 
                target={creditUrlDesktop ? "_blank" : "_self"}
                rel={creditUrlDesktop ? "noopener" : ""}
                aria-label="Visit image source"
                class:list={[
                    "group onload-animation transition-all absolute justify-center items-center rounded-full " +
                    "px-3 right-4 -top-[3.25rem] bg-black/60 hover:bg-black/70 h-9 hidden md:flex", 
                    {"hover:pr-9 active:bg-black/80": creditUrlDesktop}
                ]}
            >
                <Icon class="text-white/75 text-[1.25rem] mr-1" name="material-symbols:copyright-outline-rounded" ></Icon>
                <div class="text-white/75 text-xs">{creditTextDesktop}</div>
                {creditUrlDesktop && <Icon class:list={["transition absolute text-[oklch(0.75_0.14_var(--hue))] right-4 text-[0.75rem] opacity-0 group-hover:opacity-100"]}
                      name="fa6-solid:arrow-up-right-from-square">
                </Icon>}
            </a>}

            <!-- Background image credit - Mobile -->
            {hasBannerCredit && creditEnabledOnMobile && <a 
                href={creditUrlMobile || "#"} 
                id="banner-credit-mobile" 
                target={creditUrlMobile ? "_blank" : "_self"}
                rel={creditUrlMobile ? "noopener" : ""}
                aria-label="Visit image source"
                class:list={[
                    "group onload-animation transition-all absolute justify-center items-center rounded-full " +
                    "px-3 right-4 -top-[3.25rem] bg-black/60 hover:bg-black/70 h-9 flex md:hidden", 
                    {"hover:pr-9 active:bg-black/80": creditUrlMobile}
                ]}
            >
                <Icon class="text-white/75 text-[1.25rem] mr-1" name="material-symbols:copyright-outline-rounded" ></Icon>
                <div class="text-white/75 text-xs">{creditTextMobile}</div>
                {creditUrlMobile && <Icon class:list={["transition absolute text-[oklch(0.75_0.14_var(--hue))] right-4 text-[0.75rem] opacity-0 group-hover:opacity-100"]}
                      name="fa6-solid:arrow-up-right-from-square">
                </Icon>}
            </a>}


            {(mobileShowSidebar || tabletShowSidebar || desktopShowSidebar) && <SideBar class={`${sidebarClass} ${transparentClass}`} headings={headings}></SideBar>}

            <main id="swup-container" class={`${mainContentClass} transition-main`}>
                <div id="content-wrapper" class="onload-animation transition-leaving">
                    <!-- the overflow-hidden here prevent long text break the layout-->
                    <!-- make id different from windows.swup global property -->
                    <slot></slot>
                    <div class="footer col-span-2 onload-animation hidden lg:block">
                        <Footer></Footer>
                    </div>
                </div>
            </main>

            <div class="footer col-span-2 onload-animation block lg:hidden">
                <Footer></Footer>
            </div>
        </div>

        <BackToTop></BackToTop>
        <SpineModel></SpineModel>
        {live2dModelConfig.enable && <Live2DWidget config={live2dModelConfig} />}
    </div>
</div>

<!-- 悬浮TOC组件 -->
{siteConfig.toc.enable && <FloatingTOC headings={headings}></FloatingTOC>}

<!-- #toc needs to exist for Swup to work normally -->
{!siteConfig.toc.enable && <div id="toc"></div>}
</Layout>

<style>
/* Banner text styles */
.banner-title {
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    animation: fadeInUp 1s ease-out;
    font-weight: bold;
}

.banner-subtitle {
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
    animation: fadeInUp 1s ease-out 0.3s both;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
/* 移动端无侧边栏布局优化 */
@media (max-width: 768px) {
    .mobile-no-sidebar {
        display: block !important;
        width: 100% !important;
    }
    
    .mobile-no-sidebar main {
        width: 100% !important;
        max-width: 100% !important;
        margin: 0 !important;
        padding-left: 0 !important;
        padding-right: 0 !important;
    }
    
    .mobile-no-sidebar #content-wrapper {
        width: 100% !important;
        max-width: 100% !important;
        margin: 0 !important;
    }
}

/* 移动端横幅优化 - 小屏手机 (320px - 480px) */
@media (max-width: 480px) {
    /* Banner wrapper 高度优化 - 优先保持banner显示 */
    #banner-wrapper {
        height: 70vh !important; /* 保持较大高度优先显示banner */
        min-height: 450px;
        max-height: none; /* 移除最大高度限制 */
        top: 0 !important; /* 移动端从顶部开始，避免被导航栏覆盖 */
    }
    
    /* 主内容区域位置调整 - 向上移动以部分遮挡banner */
    .absolute.w-full.z-30 {
        top: 65vh !important; /* 向上移动5vh，部分遮挡banner */
        min-height: calc(100vh - 65vh) !important;
    }
    
    /* 横幅文本覆盖层优化 */
    .banner-text-overlay {
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        padding: 1rem !important;
        text-align: center !important; /* 文字居中对齐 */
    }
    
    /* 文本容器优化 */
    .banner-text-overlay > div {
        margin-bottom: 0 !important; /* 移除底部边距，保持居中 */
        width: 95% !important; /* 增加文本宽度利用率 */
        text-align: center !important; /* 确保文字居中 */
    }
    
    /* 标题字体优化 */
    .banner-title {
        font-size: 3.2rem !important; /* 增大字体大小 */
        line-height: 1.1 !important;
        margin-bottom: 0.5rem !important;
        text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8) !important; /* 增强阴影 */
    }
    
    /* 副标题字体优化 */
    .banner-subtitle {
        font-size: 1rem !important;
        line-height: 1.3 !important;
        text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.7) !important;
    }
    
    /* 波浪效果高度调整 - 与文章列表提升同步 */
    .waves {
        height: 13vh !important;
        min-height: 100px !important;
        max-height: 176px !important;
    }
}

/* 移动端横幅优化 - 大屏手机 (481px - 640px) */
@media (min-width: 481px) and (max-width: 640px) {
    /* Banner wrapper 高度优化 - 优先保持banner显示 */
    #banner-wrapper {
        height: 75vh !important;
        min-height: 500px;
        max-height: none; /* 移除最大高度限制 */
        top: 0 !important; /* 移动端从顶部开始，避免被导航栏覆盖 */
    }
    
    /* 主内容区域位置调整 - 向上移动以部分遮挡banner */
    .absolute.w-full.z-30 {
        top: 70vh !important; /* 向上移动5vh，部分遮挡banner */
        min-height: calc(100vh - 70vh) !important;
    }
    
    /* 横幅文本覆盖层优化 */
    .banner-text-overlay {
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        padding: 1.5rem !important;
        text-align: center !important; /* 文字居中对齐 */
    }
    
    /* 文本容器优化 */
    .banner-text-overlay > div {
        margin-bottom: 0 !important; /* 移除底部边距，保持居中 */
        width: 90% !important;
        text-align: center !important; /* 确保文字居中 */
    }
    
    /* 标题字体优化 */
    .banner-title {
        font-size: 3.8rem !important; /* 增大字体大小 */
        line-height: 1.1 !important;
        margin-bottom: 0.75rem !important;
        text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8) !important;
    }
    
    /* 副标题字体优化 */
    .banner-subtitle {
        font-size: 1.125rem !important;
        line-height: 1.4 !important;
        text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.7) !important;
    }
    
    /* 波浪效果高度调整 - 与文章列表提升同步 */
    .waves {
        height: 15vh !important;
        min-height: 110px !important;
        max-height: 166px !important;
    }
}

/* 平板设备横幅优化 (641px - 1023px) */
@media (min-width: 641px) and (max-width: 1023px) {
    /* Banner wrapper 高度优化 */
    #banner-wrapper {
        height: 70vh !important;
        min-height: 500px;
        top: 0 !important; /* 移动端从顶部开始，避免被导航栏覆盖 */
    }
    
    /* 主内容区域位置调整 - 向上移动以部分遮挡banner */
    .absolute.w-full.z-30 {
        top: 65vh !important; /* 向上移动5vh，部分遮挡banner */
        min-height: calc(100vh - 65vh) !important;
    }
    
    /* 横幅文本覆盖层优化 */
    .banner-text-overlay {
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        padding: 2rem !important;
        text-align: center !important; /* 文字居中对齐 */
    }
    
    /* 文本容器优化 */
    .banner-text-overlay > div {
        margin-bottom: 0 !important; /* 移除底部边距，保持居中 */
        width: 85% !important;
        text-align: center !important; /* 确保文字居中 */
    }
    
    /* 标题字体优化 */
    .banner-title {
        font-size: 4rem !important;
        line-height: 1.1 !important;
        margin-bottom: 1rem !important;
        text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8) !important;
    }
    
    /* 副标题字体优化 */
    .banner-subtitle {
        font-size: 1.5rem !important;
        line-height: 1.4 !important;
        text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.7) !important;
    }
    
    /* 波浪效果高度调整 - 与文章列表提升同步 */
    .waves {
        height: 17vh !important;
        min-height: 120px !important;
        max-height: 216px !important;
    }
}

/* 桌面端保持居中 (1024px+) */
@media (min-width: 1024px) {
    .banner-text-overlay {
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        padding: 2rem !important;
        text-align: center !important; /* 文字居中对齐 */
    }
    
    .banner-text-overlay > div {
        margin-bottom: 0 !important;
        width: 75% !important;
        text-align: center !important; /* 确保文字居中 */
    }
    
    /* 背景图片优化 */
    #banner img {
        object-position: center center !important;
        transition: transform 1s ease-out !important;
    }
    
    /* 波浪效果恢复默认 */
    .waves {
        height: 15vh !important;
        min-height: 80px !important;
        max-height: 150px !important;
    }
}

/* 移动端图片优化 */
@media (max-width: 1023px) {
    /* 移动端背景图片优化 */
    #banner img {
        object-position: center center !important;
        transition: transform 0.5s ease-out !important;
    }
    
    /* 移动端banner加载动画优化 */
    .onload-animation-fade-in {
        animation: mobile-fade-in 0.8s ease-out forwards !important;
    }
}

/* 移动端专用淡入动画 - 与电脑端保持一致 */
@keyframes mobile-fade-in {
    0% {
        opacity: 0;
        transform: scale(1.1);
    }
    100% {
        opacity: 1;
        transform: scale(1); /* 与电脑端当前图片缩放保持一致 */
    }
}

/* 手机端非首页隐藏banner - 改进的分阶段动画 */
@media (max-width: 1023px) {
    #banner-wrapper {
        transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94), opacity 0.3s ease-out;
        transform-origin: top center;
        /* 硬件加速优化 */
        will-change: transform, opacity;
        backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
        transform: translateZ(0);
        -webkit-transform: translateZ(0);
    }
    
    .mobile-hide-banner {
        transform: translateY(-100%) translateZ(0) !important;
        opacity: 0 !important;
        pointer-events: none !important;
        /* 快速消失 */
        transition: transform 0.3s ease-in, opacity 0.2s ease-in !important;
    }
    
    /* 手机端非首页时主内容区域从顶部开始 - 延迟出现的动画 */
    .absolute.w-full.z-30 {
        transition: top 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.1s;
        /* 硬件加速优化 */
        will-change: top;
        transform: translateZ(0);
        -webkit-transform: translateZ(0);
    }
    
    .absolute.w-full.z-30.mobile-main-no-banner {
        top: 5.5rem !important;
        min-height: calc(100vh - 5.5rem) !important;
        /* 内容区域快速上移 */
        transition: top 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.2s !important;
    }
}

/* 移动端导航栏与banner的协调 */
@media (max-width: 1023px) {
    #navbar-wrapper {
        /* 移除覆盖样式，让Navbar.astro的圆角和半透明效果生效 */
    }
    
    /* 暗色主题下的导航栏 */
    :root.dark #navbar-wrapper {
        /* 移除覆盖样式，让Navbar.astro的圆角和半透明效果生效 */
    }
}

/* 移动端banner性能优化 */
@media (max-width: 1023px) {
    .banner-container {
        /* 启用硬件加速 */
        transform: translateZ(0);
        -webkit-transform: translateZ(0);
        will-change: transform, opacity;
        
        /* 优化渲染性能 */
        contain: layout style paint;
        
        /* 减少重绘 */
        backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
    }

    .carousel-item {
        /* 硬件加速 */
        transform: translateZ(0);
        -webkit-transform: translateZ(0);
        will-change: transform, opacity;
        
        /* 优化触摸响应 */
        touch-action: pan-y;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        user-select: none;
    }

    .banner-text-overlay {
        /* 文字渲染优化 */
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        text-rendering: optimizeLegibility;
        
        /* 减少重排 */
        contain: layout style;
    }

    /* 移动端图片优化 */
    .banner-container img {
        /* 图片渲染优化 */
        image-rendering: -webkit-optimize-contrast;
        image-rendering: crisp-edges;
        
        /* 防止图片拖拽 */
        -webkit-user-drag: none;
        -khtml-user-drag: none;
        -moz-user-drag: none;
        -o-user-drag: none;
        user-drag: none;
        
        /* 触摸优化 */
        pointer-events: none;
    }
}

/* 当banner被禁用时的布局样式 */
.no-banner-layout {
    top: 5.5rem !important;
    min-height: calc(100vh - 5.5rem) !important;
}

/* 移动端当banner被禁用时的布局样式 */
@media (max-width: 1023px) {
    .absolute.w-full.z-30.no-banner-layout {
        top: 5.5rem !important;
        min-height: calc(100vh - 5.5rem) !important;
        transition: none !important; /* 移除过渡动画，立即应用位置 */
    }
}

/* 小屏手机当banner被禁用时的布局样式 */
@media (max-width: 480px) {
    .absolute.w-full.z-30.no-banner-layout {
        top: 5.5rem !important;
        min-height: calc(100vh - 5.5rem) !important;
        transition: none !important;
    }
}

/* 平板设备当banner被禁用时的布局样式 */
@media (min-width: 641px) and (max-width: 1023px) {
    .absolute.w-full.z-30.no-banner-layout {
        top: 5.5rem !important;
        min-height: calc(100vh - 5.5rem) !important;
        transition: none !important;
    }
}

/* 移动端横屏优化 */
@media (max-width: 1023px) and (orientation: landscape) {
    #banner-wrapper:not(.mobile-hide-banner) {
        top: 0 !important; /* 横屏模式从顶部开始，避免被导航栏覆盖 */
        height: 60vh !important;
    }
    
    /* 主内容区域位置调整 - 确保在banner下面，但不影响非首页 */
    .absolute.w-full.z-30:not(.mobile-main-no-banner) {
        top: 60vh !important; /* 与banner高度对应 */
        min-height: calc(100vh - 60vh) !important;
    }
    
    .banner-container {
        height: 60vh;
        min-height: 300px;
    }

    .banner-text-overlay {
        padding: 1rem 1.5rem;
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        text-align: center !important; /* 文字居中对齐 */
    }

    .banner-title {
        font-size: 2.2rem !important; /* 增大字体大小 */
        line-height: 1.3;
    }

    .banner-subtitle {
        font-size: 0.9rem;
        margin-top: 0.5rem;
    }
}

/* 移动端暗色模式优化 */
@media (max-width: 1023px) and (prefers-color-scheme: dark) {
    .banner-text-overlay {
        background: linear-gradient(
            to top,
            rgba(0, 0, 0, 0.8) 0%,
            rgba(0, 0, 0, 0.4) 50%,
            transparent 100%
        );
    }

    .banner-title {
        text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);
    }

    .banner-subtitle {
        text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.7);
    }
}

/* 水波纹显示优化 */
.waves {
    /* 确保水波纹完整显示 */
    overflow: visible;
    z-index: 5;
    /* 硬件加速，确保与背景同步渲染 */
    transform: translateZ(0);
    will-change: transform;
    /* 确保与页面背景在同一合成层 */
    contain: layout style paint;
}

.waves svg {
    /* 确保SVG完整渲染 */
    width: 100%;
    height: 100%;
    display: block;
    /* SVG硬件加速 */
    transform: translateZ(0);
    backface-visibility: hidden;
}

/* 波浪填充色主题切换优化 */
.waves use {
    /* 确保填充色与页面背景同步更新 */
    will-change: fill;
}

/* 波浪与背景同步切换优化 - 解决交界线闪烁 */
#header-waves {
    /* 确保波浪容器与页面背景在同一合成层 */
    isolation: isolate;
    /* 强制重绘，确保与body背景同步 */
    contain: layout style paint;
    /* 精确对齐 */
    margin-bottom: -1px;
}

/* 主题切换时的额外保护 */
.theme-changing #header-waves,
.theme-changing #header-waves svg,
.theme-changing #header-waves use {
    /* 在主题切换期间禁用所有可能的渲染延迟 */
    will-change: auto;
    transform: translateZ(0);
    backface-visibility: hidden;
}

/* 移动端水波纹特殊优化 */
@media (max-width: 1023px) {
    #header-waves {
        /* 确保水波纹容器不被裁剪 */
        overflow: visible;
        z-index: 5;
        /* 水波纹快速消失动画 */
        transition: transform 0.3s ease-in, opacity 0.2s ease-in;
    }
    
    /* 当banner隐藏时，水波纹快速消失 */
    .mobile-hide-banner #header-waves {
        transform: translateY(-100%);
        opacity: 0;
        /* 水波纹比banner更快消失 */
        transition: transform 0.25s ease-in, opacity 0.15s ease-in;
    }
    
    .waves svg {
        /* 移动端SVG优化 */
        min-height: 60px;
    }
    
    /* 确保水波纹在banner底部正确定位 */
    .waves {
        bottom: -1px !important;
        position: absolute !important;
    }
}

/* 超小屏幕水波纹优化 */
@media (max-width: 360px) {
    .waves {
        height: 6vh !important;
        min-height: 50px !important;
        max-height: 70px !important;
    }
}

/* 基于屏幕高度的banner优化 - 优先显示banner */
/* 极小高度屏幕 (高度 ≤ 500px) */
@media (max-height: 500px) {
    #banner-wrapper {
        height: 85vh !important; /* 占用更多高度确保banner显示 */
        min-height: 350px !important;
    }
    
    .banner-text-overlay {
        padding: 1rem !important;
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        text-align: center !important; /* 文字居中对齐 */
    }
    
    .banner-title {
        font-size: 2.8rem !important; /* 增大字体大小 */
        line-height: 1.1 !important;
        margin-bottom: 0.5rem !important;
    }
    
    .banner-subtitle {
        font-size: 0.9rem !important;
        line-height: 1.2 !important;
    }
    
    .waves {
        height: 5vh !important;
        min-height: 40px !important;
        max-height: 50px !important;
    }
}

/* 小高度屏幕 (高度 501px - 600px) */
@media (min-height: 501px) and (max-height: 600px) {
    #banner-wrapper {
        height: 80vh !important;
        min-height: 400px !important;
    }
    
    .banner-text-overlay {
        padding: 1.5rem !important;
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        text-align: center !important; /* 文字居中对齐 */
    }
    
    .banner-title {
        font-size: 3.2rem !important; /* 增大字体大小 */
        line-height: 1.1 !important;
        margin-bottom: 0.75rem !important;
    }
    
    .banner-subtitle {
        font-size: 1rem !important;
        line-height: 1.3 !important;
    }
    
    .waves {
        height: 6vh !important;
        min-height: 50px !important;
        max-height: 60px !important;
    }
}

/* 中等高度屏幕 (高度 601px - 700px) */
@media (min-height: 601px) and (max-height: 700px) {
    #banner-wrapper {
        height: 75vh !important;
        min-height: 450px !important;
    }
    
    .banner-text-overlay {
        padding: 2rem !important;
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        text-align: center !important; /* 文字居中对齐 */
    }
    
    .banner-title {
        font-size: 3.8rem !important; /* 增大字体大小 */
        line-height: 1.1 !important;
        margin-bottom: 1rem !important;
    }
    
    .banner-subtitle {
        font-size: 1.125rem !important;
        line-height: 1.4 !important;
    }
    
    .waves {
        height: 8vh !important;
        min-height: 60px !important;
        max-height: 80px !important;
    }
}

/* 横屏模式特殊处理 - 优先显示banner */
@media (orientation: landscape) and (max-height: 500px) {
    #banner-wrapper {
        height: 90vh !important; /* 横屏时占用更多高度 */
        min-height: 300px !important;
    }
    
    .banner-text-overlay {
        padding: 1rem 2rem !important;
        align-items: center !important; /* 垂直居中 */
        justify-content: center !important; /* 水平居中 */
        text-align: center !important; /* 文字居中对齐 */
    }
    
    .banner-title {
        font-size: 2.8rem !important; /* 增大字体大小 */
        line-height: 1.1 !important;
        margin-bottom: 0.5rem !important;
    }
    
    .banner-subtitle {
        font-size: 1rem !important;
        line-height: 1.2 !important;
    }
    
    .waves {
        height: 4vh !important;
        min-height: 30px !important;
        max-height: 40px !important;
    }
}